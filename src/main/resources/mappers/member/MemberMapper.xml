<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.jandiFactoring.redJandi.member.model.dao.MemberMapper">

	<resultMap id="memberResultSet" type="MemberDTO">
		<id column="EMAIL" property="email" />
		<result column="NICKNAME" property="nickName" />
		<result column="PASSWORD" property="password" />
		<result column="PHONE" property="phone" />
		<result column="IS_JANDI" property="isJandi" />
		<result column="WARNING" property="warning" />
		<result column="IS_BLACK" property="isBlack" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="IS_EXIT" property="isExit" />
		<result column="NAME" property="name" />
		<result column="BLACK_END_DATE" property="blackEndDate" />
	</resultMap>


	<!-- 이메일의 중복 여부 확인하기 by 권순표 -->
	<select id="isSsackEmailDup" resultType="_int" parameterType="MemberDTO">
		SELECT COUNT(A.EMAIL)
	      FROM SSACK_TBL A
		 WHERE A.EMAIL = #{ email }
	  	   AND IS_EXIT = 'N'
	</select>
	
	<!-- 사용자의 인증번호가 존재하는지 여부 확인 -->
	<select id="isExistCheckNum" resultType="_int" parameterType="MemberDTO">
	    SELECT COUNT(A.CHECK_NUMBER)
		  FROM EMAIL_CHECK_TBL A
		 WHERE A.EMAIL = #{ email }
	</select>
	
	<!-- 회원가입 단에서 인증번호 발송 시 인증번호 등록 by 권순표 -->
    <insert id="isInsertCheckNum" parameterType="java.lang.String">
        INSERT
		  INTO EMAIL_CHECK_TBL 
		(
		  CHECK_CODE
		, EMAIL
		, CHECK_NUMBER
		)
		VALUES
		(
		  SEQ_MAIL_CHECK_TBL.NEXTVAL
		, NULL
		, #{ value }
		)
    </insert>
    
     <!-- 가장 최근에 등록된 인증번호 조회 by 권순표 -->
    <select id="selectTrueNumber" resultType="_int">
        SELECT V2.CHECK_NUMBER
		  FROM (SELECT ROWNUM RNUM
		            ,  V.CHECK_NUMBER
				  FROM (SELECT A.CHECK_NUMBER
						  FROM EMAIL_CHECK_TBL A
						 ORDER BY CHECK_CODE DESC
		               )V
		         WHERE ROWNUM = 1
		       )V2
    </select>
    
     <!-- 닉네임 중복 체크 by 권순표 -->
    <select id="isSsackNickNameDup" resultType="_int" parameterType="MemberDTO">
        SELECT
		       COUNT(A.NICKNAME)
		  FROM SSACK_TBL A
		 WHERE A.NICKNAME= #{ nickName }
    </select>
    
     <!-- 회원 정보 등록하기 by 권순표 -->
    <insert id="isRegistMember" parameterType="MemberDTO">
        INSERT
		  INTO SSACK_TBL
		(
		  EMAIL
		, NICKNAME
		, PASSWORD
		, PHONE
		, IS_JANDI
		, WARNING
		, IS_BLACK
		, ENROLL_DATE
		, IS_EXIT
		, NAME
		)
		VALUES
		(
		  #{ email }
		, #{ nickName }
		, #{ password }
		, #{ phone }
		, DEFAULT
		, DEFAULT
		, DEFAULT
		, SYSDATE
		, DEFAULT
		, #{ name }
		)
    </insert>
    
    <!-- 정상 회원가입 시 인증번호 이력 테이블에 사용자 이메일 등록 by 권순표 -->
    <update id="isUpdateCheckHis" parameterType="HashMap">
        UPDATE EMAIL_CHECK_TBL A 
		   SET A.EMAIL = #{ email }
		 WHERE A.CHECK_NUMBER = #{ checkNum }
    </update>
    
    <!-- 이메일의 존재 유무 확인하기 by 권순표 -->
    <select id="isExistEmail" resultType="_int" parameterType="MemberDTO">
        SELECT 
		       COUNT(A.EMAIL)
		  FROM SSACK_TBL A
		 WHERE A.EMAIL = #{ email }
           AND IS_EXIT = 'N'
    </select>
    
    <!-- 암호화된 비밀번호 조회하기 by 권순표 -->
    <select id="selectEncPwd" resultType="java.lang.String" parameterType="MemberDTO">
        SELECT
		       A.PASSWORD
		  FROM SSACK_TBL A
		 WHERE A.EMAIL = #{ email }
		   AND IS_EXIT = 'N'
    </select>
    
     <!-- 세션에 등록할 회원 정보 구해오기 by 권순표 -->
    <select id="loginMember" resultMap="memberResultSet" parameterType="MemberDTO">
        SELECT
		       A.EMAIL
			 , A.NICKNAME
			 , A.PHONE
			 , A.IS_JANDI
			 , A.WARNING
			 , A.IS_BLACK
			 , A.ENROLL_DATE
			 , A.IS_EXIT
			 , A.NAME
			 , A.BLACK_END_DATE
		  FROM SSACK_TBL A
		 WHERE A.EMAIL = #{ email }
		   AND A.IS_EXIT = 'N'
    </select>
    
    <!-- 사용자 이메일 찾기 by 권순표 -->
    <select id="findEmail" resultType="java.lang.String" parameterType="MemberDTO">
        SELECT
               A.EMAIL
          FROM SSACK_TBL A
         WHERE A.NAME = #{ name }
           AND A.PHONE = #{ phone }
    </select>
    
     <!-- 사용자 비밀번호(계정) 존재 유무 확인 by 권순표 -->
    <select id="isExistPwd" resultType="_int" parameterType="MemberDTO">
        SELECT
		       COUNT(A.EMAIL)
		  FROM SSACK_TBL A
		 WHERE A.NAME= #{ name }
           AND A.EMAIL= #{ email }
    </select>
    
    <!-- 비밀번호 찾기 단에서 인증번호 발송 시 인증번호 업데이트 by 권순표 -->
    <update id="isUpdateCheckNum" parameterType="HashMap">
        UPDATE EMAIL_CHECK_TBL A
		   SET A.CHECK_NUMBER = #{ checkNum }
		 WHERE A.EMAIL = #{ email }
    </update>
    
     <!-- 해당 이메일의 인증번호 조회 by 권순표 -->
    <select id="selectPwdTrueNumber" resultType="_int" parameterType="MemberDTO">
        SELECT A.CHECK_NUMBER 
		  FROM EMAIL_CHECK_TBL A
		 WHERE A.EMAIL = #{ email }
    </select>
    
    <!-- 사용자 비밀번호 수정 by 권순표 -->
    <update id="isUpdatePwd" parameterType="MemberDTO">
        UPDATE 
		       SSACK_TBL A
		   SET A.PASSWORD = #{ password }
		 WHERE A.EMAIL = #{ email }
    </update>
    

	<select id="selectCountJandiNickName" resultType="_int">
		SELECT COUNT(JAN.EMAIL)
		  FROM JANDI_TBL JAN
		 WHERE JAN.NICKNAME = #{ nickName }
	</select>




</mapper>