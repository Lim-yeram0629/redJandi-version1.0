<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jandiFactoring.redJandi.main.model.dao.MainDAO">
	
	<resultMap type="com.jandiFactoring.redJandi.classRoom.model.dto.ClassDTO" id="classResultMap">
		<id column="CLASS_CODE" property="classCode"/>
    	<result column="CREATE_DATE" property="createDate"/>
    	<result column="CONTENTS" property="contents"/>
    	<result column="TAG" property="tag"/>
    	<result column="CATEGORY_CODE" property="categoryCode"/>
    	<result column="EMAIL" property="email"/>
    	<result column="BOARD_TYPE" property="boardType"/>
    	<result column="VIEWS" property="views"/>
    	<result column="MAX_COUNT" property="maxCount"/>
    	<result column="TITLE" property="title"/>
    	<result column="PRICE" property="price"/>
    	<result column="FILE_PATH" property="filePath"/>
    	<result column="ORG_FILE_PATH" property="orgFilePath"/>
    	<result column="NICKNAME" property="nickName" />
    	<result column="AVG(CR.star)" property="avgReview"/>
	</resultMap>
	
	<resultMap type="com.jandiFactoring.redJandi.jandi.model.dto.JandiDTO" id="jandiResultMap">
    	<id column="EMAIL" property="email"/>
    	<result column="NICKNAME" property="nickName"/>
    	<result column="CAREER" property="career"/>
    	<result column="INTRO" property="intro"/>
    	<result column="PROFILE_PATH" property="profile_path"/>
    	<result column="ENROLL_DATE" property="enroll_date"/>
    	<result column="ACCOUNT" property="account"/>
    	<result column="BANK" property="bank"/>
    	<result column="ACC_NAME" property="acc_name"/>
    </resultMap>
    
	
<!-- 	<select id="selectAllClassList" resultMap="classResultMap">
		SELECT 
				C.CLASS_CODE
			  , C.EMAIL
		  FROM CLASS_TBL C
	</select> -->
	
	<select id="selectPopularClass" resultMap="classResultMap">
		SELECT
		       C.CLASS_CODE
		     , C.FILE_PATH
		     , C.TITLE
		     , C.PRICE
		     , C.VIEWS
		     , J.NICKNAME
		     , AVG(CR.STAR)
   	  	  FROM CLASS_TBL C 
   	      JOIN JANDI_TBL J ON (C.EMAIL = J.EMAIL) 
          LEFT JOIN (SELECT STAR
                          , CLASS_CODE
               FROM CLASS_REVIEW_TBL) CR ON (CR.CLASS_CODE = C.CLASS_CODE)
   	     WHERE C.IS_DELETED = 'N'  
         GROUP BY C.CLASS_CODE,C.FILE_PATH, C.TITLE, C.PRICE, C.VIEWS, J.NICKNAME                      
	</select>
	
	<select id="selectPupularJandi" resultMap="jandiResultMap">
		SELECT J.EMAIL
		     , J.NICKNAME
		     , J.INTRO
		     , J.PROFILE_PATH
		  FROM JANDI_TBL J
	</select>
	
	<select id="selectViewClass" resultMap="classResultMap">
		SELECT 
       		   C.CLASS_CODE
     		 , C.FILE_PATH
      		 , C.TITLE
      		 , C.PRICE
      		 , C.VIEWS
      		 , J.NICKNAME
       		 , AVG(CR.star)
   	      FROM CLASS_TBL C 
   	      JOIN JANDI_TBL J ON (C.EMAIL = J.EMAIL) 
          LEFT JOIN (SELECT STAR
                          , CLASS_CODE
                       FROM CLASS_REVIEW_TBL) CR ON (CR.CLASS_CODE = C.CLASS_CODE)
   	     WHERE C.IS_DELETED = 'N'  
         GROUP BY C.CLASS_CODE,C.FILE_PATH, C.TITLE, C.PRICE, C.VIEWS, J.NICKNAME
   	     ORDER BY C.VIEWS DESC
	</select>
	
	<select id="selectNewestClass" resultMap="classResultMap">
		SELECT 
               C.CLASS_CODE
             , C.FILE_PATH
             , C.TITLE
             , C.PRICE
             , C.VIEWS
             , C.CREATE_DATE
             , J.NICKNAME
             , AVG(CR.star)
   	      FROM CLASS_TBL C 
   	      JOIN JANDI_TBL J ON (C.EMAIL = J.EMAIL) 
          LEFT JOIN (SELECT STAR
                          , CLASS_CODE
                       FROM CLASS_REVIEW_TBL) CR ON (CR.CLASS_CODE = C.CLASS_CODE)
   	     WHERE C.IS_DELETED = 'N'  
         GROUP BY C.CLASS_CODE, C.FILE_PATH, C.TITLE, C.PRICE, C.VIEWS, J.NICKNAME, C.CREATE_DATE
   	     ORDER BY C.CREATE_DATE DESC
	</select>
	
	<select id="selectDeadlineClass" resultMap="classResultMap">
		SELECT 
              C.MAX_COUNT
            , C.FILE_PATH
            , C.TITLE
            , C.PRICE
            , C.VIEWS
            , J.NICKNAME
            , COUNT(PT.CLASS_CODE)
            , pt.CLASS_CODE 
		  FROM CLASS_TBL C
		  JOIN PURCHASE_CLASS_TBL PT ON (PT.CLASS_CODE = C.CLASS_CODE)
		  JOIN JANDI_TBL J ON (C.EMAIL = J.EMAIL) 
		 WHERE PT.STATUS = 'Y'
		 GROUP BY PT.CLASS_CODE, C.MAX_COUNT, C.FILE_PATH, C.TITLE, C.PRICE, J.NICKNAME, C.VIEWS
		 ORDER BY C.MAX_COUNT - COUNT(PT.CLASS_CODE)
	</select>
	
	<select id="selectHighScoreClass" resultMap="classResultMap">
		SELECT 
               C.CLASS_CODE
             , C.FILE_PATH
             , C.TITLE
             , C.PRICE
             , C.VIEWS
             , C.CREATE_DATE
             , J.NICKNAME
             , AVG(CR.star)
   	      FROM CLASS_TBL C 
   	      JOIN JANDI_TBL J ON (C.EMAIL = J.EMAIL) 
          LEFT JOIN (SELECT STAR
                          , CLASS_CODE
                       FROM CLASS_REVIEW_TBL) CR ON (CR.CLASS_CODE = C.CLASS_CODE)
   	     WHERE C.IS_DELETED = 'N'  
         GROUP BY C.CLASS_CODE, C.FILE_PATH, C.TITLE, C.PRICE, C.VIEWS, J.NICKNAME, C.CREATE_DATE
   	    HAVING AVG(CR.star) IS NOT NULL
   	     ORDER BY AVG(CR.star) DESC
	</select>

</mapper>